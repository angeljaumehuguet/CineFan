// Generated by view binder compiler. Do not edit!
package com.example.cinefan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cinefan.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMisPeliculasBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final MaterialButton btnAgregarPrimera;

  @NonNull
  public final ImageButton btnCambiarVista;

  @NonNull
  public final Chip chipFiltroGenero;

  @NonNull
  public final Chip chipOrdenar;

  @NonNull
  public final LinearLayout layoutFiltros;

  @NonNull
  public final LinearLayout layoutSinPeliculas;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerPeliculas;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final TextView txtSinPeliculas;

  private FragmentMisPeliculasBinding(@NonNull FrameLayout rootView,
      @NonNull MaterialButton btnAgregarPrimera, @NonNull ImageButton btnCambiarVista,
      @NonNull Chip chipFiltroGenero, @NonNull Chip chipOrdenar,
      @NonNull LinearLayout layoutFiltros, @NonNull LinearLayout layoutSinPeliculas,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView recyclerPeliculas,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull TextView txtSinPeliculas) {
    this.rootView = rootView;
    this.btnAgregarPrimera = btnAgregarPrimera;
    this.btnCambiarVista = btnCambiarVista;
    this.chipFiltroGenero = chipFiltroGenero;
    this.chipOrdenar = chipOrdenar;
    this.layoutFiltros = layoutFiltros;
    this.layoutSinPeliculas = layoutSinPeliculas;
    this.progressBar = progressBar;
    this.recyclerPeliculas = recyclerPeliculas;
    this.swipeRefresh = swipeRefresh;
    this.txtSinPeliculas = txtSinPeliculas;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMisPeliculasBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMisPeliculasBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mis_peliculas, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMisPeliculasBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_agregar_primera;
      MaterialButton btnAgregarPrimera = ViewBindings.findChildViewById(rootView, id);
      if (btnAgregarPrimera == null) {
        break missingId;
      }

      id = R.id.btn_cambiar_vista;
      ImageButton btnCambiarVista = ViewBindings.findChildViewById(rootView, id);
      if (btnCambiarVista == null) {
        break missingId;
      }

      id = R.id.chip_filtro_genero;
      Chip chipFiltroGenero = ViewBindings.findChildViewById(rootView, id);
      if (chipFiltroGenero == null) {
        break missingId;
      }

      id = R.id.chip_ordenar;
      Chip chipOrdenar = ViewBindings.findChildViewById(rootView, id);
      if (chipOrdenar == null) {
        break missingId;
      }

      id = R.id.layout_filtros;
      LinearLayout layoutFiltros = ViewBindings.findChildViewById(rootView, id);
      if (layoutFiltros == null) {
        break missingId;
      }

      id = R.id.layout_sin_peliculas;
      LinearLayout layoutSinPeliculas = ViewBindings.findChildViewById(rootView, id);
      if (layoutSinPeliculas == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recycler_peliculas;
      RecyclerView recyclerPeliculas = ViewBindings.findChildViewById(rootView, id);
      if (recyclerPeliculas == null) {
        break missingId;
      }

      id = R.id.swipe_refresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.txt_sin_peliculas;
      TextView txtSinPeliculas = ViewBindings.findChildViewById(rootView, id);
      if (txtSinPeliculas == null) {
        break missingId;
      }

      return new FragmentMisPeliculasBinding((FrameLayout) rootView, btnAgregarPrimera,
          btnCambiarVista, chipFiltroGenero, chipOrdenar, layoutFiltros, layoutSinPeliculas,
          progressBar, recyclerPeliculas, swipeRefresh, txtSinPeliculas);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
